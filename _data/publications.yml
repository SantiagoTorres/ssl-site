{% include_relative_once _data/projects.yml %}

intro: "Selected, recent papers from the Secure Systems Lab.
Click a project name to filter by project."

publications:
  - &kuppusamy_escar_16
    anchor: kuppusamy_escar_16
    title: "Uptane: Securing Software Updates for Automobiles"
    authors:
      - name: "Karthik, Trishank and Brown, Akan and Awwad, Sebastien and McCoy, Damon and Bielawski, Russ and Mott, Cameron and Lauzon, Sam and Weimerskirch, Andr{\'e} and Cappos, Justin"
    project: *uptane
    booktitle: "ESCAR 2016"
    link: "/papers/kuppusamy_escar_16.pdf"
    abstract: "Software update systems for automobiles can deliver significant
benefits, but, if not implemented carefully, they could potentially
incur serious security vulnerabilities. Previous solutions for securing
software updates consider standard attacks and deploy widely
understood security mechanisms, such as digital signatures for the
software updates, and hardware security modules (HSM) to sign
software updates. However, no existing solution considers more
advanced security objectives, such as resilience against a repository
compromise, or freeze attacks to the vehicle's update mechanism,
or a compromise at a supplier's site. Solutions developed
for the PC world do not generalize to automobiles for two reasons:
first, they do not solve problems that are unique to the automotive
industry (e.g., that there are many different types of computers
to be updated on a vehicle), and second, they do not address
security attacks that can cause a vehicle to fail (e.g. a man-in-the-middle
attack without compromising any signing key) or that can
cause a vehicle to become unsafe. In this paper, we present Uptane,
the first software update framework for automobiles that counters
a comprehensive array of security attacks, and is resilient to partial
compromises. Uptane adds strategic features to the state-of-the-art
software update framework, TUF, in order to address automotivespecific
vulnerabilities and limitations. Uptane is flexible and easy
to adopt, and its design details were developed together with the
main automotive industry stakeholders in the USA."

  - &torres_toto_usenixsec-2016
    anchor: torres_toto_usenixsec-2016
    title: "On omitting commits and committing omissions: Preventing git metadata tampering that (re) introduces software vulnerabilities"
    authors:
      - name: "Torres-Arias, Santiago and Ammula, Anil Kumar and Curtmola, Reza and Cappos, J"
    project: *in-toto
    booktitle: "25th USENIX Security Symposium, USENIX Security"
    volume: "16"
    pages: "10-12"
    year: "2016"
    link: "/papers/torres_toto_usenixsec-2016.pdf"
    abstract: "Metadata manipulation attacks represent a new threat
class directed against Version Control Systems, such as
the popular Git. This type of attack provides inconsistent
views of a repository state to different developers,
and deceives them into performing unintended operations
with often negative consequences. These include
omitting security patches, merging untested code into a
production branch, and even inadvertently installing software
containing known vulnerabilities. To make matters
worse, the attacks are subtle by nature and leave no trace
after being executed.
We propose a defense scheme that mitigates these attacks
by maintaining a cryptographically-signed log of
relevant developer actions. By documenting the state
of the repository at a particular time when an action is
taken, developers are given a shared history, so irregularities
are easily detected. Our prototype implementation
of the scheme can be deployed immediately as it is
backwards compatible and preserves current workflows
and use cases for Git users. An evaluation shows that
the defense adds a modest overhead while offering significantly
stronger security. We performed responsible
disclosure of the attacks and are working with the Git
community to fix these issues in an upcoming version of
Git."

  - &kuppusamy_nsdi_16
    anchor: kuppusamy_nsdi_16
    title: "Diplomat: Using Delegations to Protect Community Repositories"
    authors:
      - name: "Trishank Karthik Kuppusamy and Santiago Torres-Arias and Vladimir Diaz and Justin Cappos"
    project: *tuf
    booktitle: "13th USENIX Symposium on Networked Systems Design and Implementation (NSDI 16)"
    year: "2016"
    isbn: "978-1-931971-29-4"
    address: "Santa Clara, CA"
    pages: "567--581"
    publisher: "USENIX Association"
    link: "/papers/kuppusamy_nsdi_16.pdf"
    abstract: "Community repositories, such as Docker Hub, PyPI, and RubyGems, are bustling marketplaces that distribute software. Even though these repositories use common software signing techniques (e.g., GPG and TLS), attackers can still publish malicious packages after a server compromise. This is mainly because a community repository must have immediate access to signing keys in order to certify the large number of new projects that are registered each day.

This work demonstrates that community repositories can offer compromise-resilience and real-time project registration by employing mechanisms that disambiguate trust delegations. This is done through two delegation mechanisms that provide flexibility in the amount of trust assigned to different keys. Using this idea we implement Diplomat, a software update framework that supports security models with different security / usability tradeoffs. By leveraging Diplomat, a community repository can achieve near-perfect compromise-resilience while allowing real-time project registration. For example, when Diplomat is deployed and configured to maximize security on Python's community repository, less than 1% of users will be at risk even if an attacker controls the repository and is undetected for a month. Diplomat is being integrated by Ruby, CoreOS, Haskell, OCaml, and Python, and has already been deployed by Flynn, LEAP, and Docker."

  - &Peddinti_ICWSM_2016
    anchor: Peddinti_ICWSM_2016
    title: "Finding Sensitive Accounts on Twitter: An Automated Approach Based on Follower Anonymity"
    authors:
      - name: "Peddinti, Sai Teja and Ross, Keith W and Cappos, Justin"
    booktitle: "Tenth International AAAI Conference on Web and Social Media"
    year: "2016"
    link: "/papers/Peddinti_ICWSM_2016.pdf"
    abstract: "We explore the feasibility of automatically finding accounts that publish sensitive content on Twitter, by examining the percentage of anonymous and identifiable followers the accounts have. We first designed a machine learning classifier to automatically determine if a Twitter account is anonymous or identifiable. We then classified an account as potentially sensitive based on the percentages of anonymous and identifiable followers the account has. We applied our approach to approximately 100,000 accounts with 404 million active followers. The approach uncovered accounts that were sensitive for a diverse number of reasons."
    eprint: "arXiv:1702.00164"

  - &li-usenix-fence-2015
    anchor: li-usenix-fence-2015
    title: "Fence: Protecting Device Availability With Uniform Resource Control"
    authors:
      - name: "Tao Li and Albert Rafetseder and Rodrigo Fonseca and Justin Cappos"
    project: *seattle
    booktitle: "2015 USENIX Annual Technical Conference (USENIX ATC 15)"
    year: "2015"
    isbn: "978-1-931971-225"
    address: "Santa Clara, CA"
    pages: "177--191"
    publisher: "USENIX Association"
    link: "/papers/li-usenix-fence-2015.pdf"
    abstract: "Applications such as software updaters or a run-away web
app, even if low priority, can cause performance degradation,
loss of battery life, or other issues that reduce a
computing device's availability. The core problem is that
OS resource control mechanisms unevenly apply uncoordinated
policies across different resources. This paper
shows how handling resources - e.g., CPU, memory, sockets,
and bandwidth - in coordination, through a unifying
abstraction, can be both simpler and more effective. We
abstract resources along two dimensions of fungibility
and renewability, to enable resource-agnostic algorithms
to provide resource limits for a diverse set of applications.
We demonstrate the power of our resource abstraction
with a prototype resource control subsystem, Fence,
which we implement for two sandbox environments running
on a wide variety of operating systems (Windows,
Linux, the BSDs, Mac OS X, iOS, Android, OLPC, and
Nokia) and device types (servers, desktops, tablets, laptops,
and smartphones). We use Fence to provide systemwide
protection against resource hogging processes that
include limiting battery drain, preventing overheating,
and isolating performance. Even when there is interference,
Fence can double the battery life and improve the
responsiveness of other applications by an order of magnitude.
Fence is publicly available and has been deployed
in practice for five years, protecting tens of thousands of
users"

  - &rasley_checkapi_issre2015
    anchor: rasley_checkapi_issre2015
    title: "Detecting latent cross-platform API violations"
    authors:
      - name: "J. Rasley and E. Gessiou and T. Ohmann and Y. Brun and S. Krishnamurthi and J. Cappos"
    project: *seattle
    booktitle: "2015 IEEE 26th International Symposium on Software Reliability Engineering (ISSRE)"
    year: "2015"
    pages: " 484-495"
    keywords: "application program interfaces;program debugging;program testing;software portability;CheckAPI;JavaScript;POSIX;Seattle project Repy VM;application code;cross-platform portability violation detection;latent cross-platform API violation detection;operating system;partial specification-based API implementation;portability bugs;Computer bugs;Libraries;Operating systems;Runtime;Sockets;Testing"
    month: "Nov"
    link: "/papers/rasley_checkapi_issre2015.pdf"
    abstract: "Many APIs enable cross-platform system development
by abstracting over the details of a platform, allowing
application developers to write one implementation that will run
on a wide variety of platforms. Unfortunately, subtle differences
in the behavior of the underlying platforms make cross-platform
behavior difficult to achieve. As a result, applications using these
APIs can be plagued by bugs difficult to observe before deployment.
These portability bugs can be particularly difficult to
diagnose and fix because they arise from the API implementation,
the operating system, or hardware, rather than application code.
This paper describes CheckAPI, a technique for detecting
violations of cross-platform portability. CheckAPI compares an
application's interactions with the API implementation to its interactions
with a partial specification-based API implementation,
and does so efficiently enough to be used in real production
systems and at runtime. CheckAPI finds latent errors that escape
pre-release testing. This paper discusses the subtleties of different
kinds of API calls and strategies for effectively producing the
partial implementations. Validating CheckAPI on JavaScript,
the Seattle project's Repy VM, and POSIX detects dozens of
violations that are confirmed bugs in widely-used software."

  - &hooshangi_sigcse15
    anchor: hooshangi_sigcse15
    title: "Can the Security Mindset Make Students Better Testers?"
    authors:
      - name: "Hooshangi, Sara and Weiss, Richard and Cappos, Justin"
    booktitle: "Proceedings of the 46th ACM Technical Symposium on Computer Science Education"
    project: *seattle
    series: "SIGCSE '15"
    year: "2015"
    isbn: "978-1-4503-2966-8"
    location: "Kansas City, Missouri, USA"
    pages: "404--409"
    numpages: "6"
    acmid: "2677268"
    publisher: "ACM"
    address: "New York, NY, USA"
    keywords: "access control, python, security, testing"
    link: "/papers/hooshangi_sigcse15.pdf"
    abstract: "Writing secure code requires a programmer to think both as a defender and an attacker. One can draw a parallel between this model of thinking and techniques used in test-driven development, where students learn by thinking about how to effectively test their code and anticipate possible bugs. In this study, we analyzed the quality of both attack and defense code that students wrote for an assignment given in an introductory security class of 75 (both graduate and senior undergraduate levels) at NYU. We made several observations regarding students' behaviors and the quality of both their defensive and offensive code. We saw that student defensive programs (i.e., assignments) are highly unique and that their attack programs (i.e., test cases) are also relatively unique. In addition, we examined how student behaviors in writing defense programs correlated with their attack program's effectiveness. We found evidence that students who learn to write good defensive programs can write effective attack programs, but the converse is not true. While further exploration of causality is needed, our results indicate that a greater pedagogical emphasis on defensive security may benefit students more than one that emphasizes offense."

  - &weiss_trustcom2015
    anchor: weiss_trustcom2015
    title: "Trust Evaluation in Mobile Devices: An Empirical Study"
    authors:
      - name: "R. Weiss and L. Reznik and Y. Zhuang and A. Hoffman and D. Pollard and A. Rafetseder and T. Li and J. Cappos"
    project: *sensibility
    booktitle: "2015 IEEE Trustcom/BigDataSE/ISPA"
    year: "2015"
    volume: "1"
    pages: "25-32"
    keywords: "Android (operating system);expert systems;mobile computing;power aware computing;program verification;resource allocation;smart phones;system monitoring;trusted computing;voltage measurement;Android smartphone;Android-based smartphones;CPU utilization;GPS location;OBD sensor;anomalous behavior detection;battery voltage measurement;expert rule system;hierarchical trust evaluation methodology;mobile devices;network communication;onboard diagnostics sensor;resource consumption patterns;resource utilization monitoring;tablets;trust metrics;trust verification;trustworthiness evaluation;Computer science;Electronic mail;Measurement;Privacy;Security;Smart phones;mobile computing;security;trust metrics"
    link: "/papers/weiss_trustcom2015.pdf"
    month: "Aug"
    abstract: "Mobile devices today, such as smartphones and tablets, have become both more complex and diverse. This paper presents a framework to evaluate the trustworthiness of the individual components in a mobile system, as well as the entire system. The major components are applications, devices and networks of devices. Given this diversity and multiple levels of a mobile system, we develop a hierarchical trust evaluation methodology, which enables the combination of trust metrics and allows us to verify the trust metric for each component based on the trust metrics for others. The paper first demonstrates this idea for individual applications and Android-based smartphones. The methodology involves two stages: initial trust evaluation and trust verification. In the first stage, an expert rule system is used to produce trust metrics at the lowest level of the hierarchy. In the second stage, the trust metrics are verified by comparing data from components and a trust evaluation is produced for the combined system. This paper presents the results of two empirical studies, in which this methodology is applied and tested. The first study involves monitoring resource utilization and evaluating trust based on resource consumption patterns. We measured battery voltage, CPU utilization and network communication for individual apps and detected anomalous behavior that could be indicative of malicious code. The second study involves verification of the trust evaluation by comparing the data from two different devices: the GPS location from an Android smartphone in an automobile and the data from an on-board diagnostics (OBD) sensor of the same vehicle."


#  JAC: Poster
#  - &sensibility-testbed
#    anchor: sensibility-testbed
#    title: "Sensibility testbed: An internet-wide cloud platform for programmable exploration of mobile devices"
#    authors:
#      - name: "Y. Zhuang and L. Law and A. Rafetseder and L. Wang and I. Beschastnikh and J. Cappos"
#    project: *sensibility
#    booktitle: "2014 IEEE Conference on Computer Communications Workshops (INFOCOM WKSHPS)"
#    year: "2014"
#    pages: "139-140"
#    keywords: "cellular radio;computer network security;data privacy;mobile computing;smart phones;wireless LAN;Internet-wide cloud platform;WiFi networks;cellular networks;community-driven platform;coverage measurement;performance measurement;programmable exploration;secure data access;sensibility testbed;user behavioral patterns;user privacy preservation;user-owned mobile devices;Access control;Data privacy;Mobile communication;Monitoring;Sensors;Smart phones"
#    link: "http://ieeexplore.ieee.org/document/6849194/"
#    month: "April"
#    abstract: "Smartphones contain sensors that provide information about the user of the device. Studying smartphones, therefore, provides an invaluable window into the behavioral patterns of users. In this work, we describe an open infrastructure that provides research communities with principled access to mobile devices and their sensors. Our platform, the Sensibility Testbed, is a free, community-driven platform for mobile devices. It provides secure data access to user-owned mobile devices while preserving user privacy. The unified programmable interface to sensors on heterogeneous devices in the Sensibility Testbed enables research scientists to design and deploy experiments that run across large numbers of devices, for example to measure the coverage and performance of cellular and WiFi networks. The Sensibility Testbed makes the sensing capabilities of smartphones more accessible to a broad range of researchers."

  - &cappos_blursense_sas_14
    anchor: cappos_blursense_sas_14
    title: "BlurSense: Dynamic fine-grained access control for smartphone privacy"
    authors:
      - name: "J. Cappos and L. Wang and R. Weiss and Y. Yang and Y. Zhuang"
    project: *sensibility
    booktitle: "2014 IEEE Sensors Applications Symposium (SAS)"
    year: "2014"
    pages: "329-332"
    keywords: "authorisation;data privacy;sensors;smart phones;BlurSense;dynamic fine-grained access control;embedded on-board sensors;flexible access control mechanism;mobile applications;smartphone privacy filter;tablets;untrusted apps;Androids;Humanoid robots;Mobile communication;Monitoring;Privacy;Security;Sensors;Sensor access control;data filtering;privacy"
    month: "Feb"
    link: "/papers/cappos_blursense_sas_14.pdf"
    abstract: "For many people, smartphones serve as a technical interface to the modern world. These smart devices have embedded on-board sensors, such as accelerometers, gyroscopes, GPS sensors, and cameras, which can be used to develop new mobile applications. However, the sensors also pose privacy risks to users. This work describes BlurSense, a tool that provides secure and customizable access to all of the sensors on smartphones, tablets, and similar end user devices. The current access control to the smartphone resources, such as sensor data, is static and coarse-grained. BlurSense is a dynamic, fine-grained, flexible access control mechanism, acting as a line of defense that allows users to define and add privacy filters. As a result, the user can expose filtered sensor data to untrusted apps, and researchers can collect data in a way that safeguards users' privacy."

  - &reininger_sensevis_sas15
    anchor: reininger_sensevis_sas15
    title: "A first look at vehicle data collection via smartphone sensors"
    authors:
      - name: "M. Reininger and S. Miller and Y. Zhuang and J. Cappos"
    project: *sensibility
    booktitle: "2015 IEEE Sensors Applications Symposium (SAS)"
    year: "2015"
    pages: "1-6"
    keywords: "on-board communications;smart phones;vehicles;wireless LAN;WiFi on-board diagnostics sensor;data collection;mobile computing platform;moving vehicles;offline analysis;real-time analysis;smartphone sensors;tablets;vehicle data collection;visualization tools;Data collection;IEEE 802.11 Standards;Prototypes;Security;Sensors;Servers;Vehicles;Smartphone sensors;data visualization and analysis;vehicular networks"
    month: "April"
    link: "/papers/reininger_sensevis_sas15.pdf"
    abstract: "Smartphones serve as a technical interface to the outside world. These devices have embedded, on-board sensors (such as accelerometers, WiFi, and GPSes) that can provide valuable information for investigating users' needs and behavioral patterns. Similarly, computers that are embedded in vehicles are capable of collecting valuable sensor data that can be accessed by smartphones through the use of On-Board Diagnostics (OBD) sensors. This paper describes a prototype of a mobile computing platform that provides access to vehicles' sensors by using smartphones and tablets, without compromising these devices' security. Data such as speed, engine RPM, fuel consumption, GPS locations, etc. are collected from moving vehicles by using a WiFi On-Board Diagnostics (OBD) sensor, and then backhauled to a remote server for both real-time and offline analysis. We describe the design and implementation details of our platform, for which we developed a library for in-vehicle sensor access and created a non-relational database for scalable backend data storage. We propose that our data collection and visualization tools are useful for analyzing driving behaviors; we also discuss future applications, security, and privacy concerns specific to vehicular networks."

  - &martins-atc15-camera
    anchor: martins-atc15-camera
    title: "Selectively Taming Background Android Apps to Improve Battery Lifetime"
    authors:
      - name: "Marcelo Martins and Justin Cappos and Rodrigo Fonseca"
    project: *seattle
    booktitle: "2015 USENIX Annual Technical Conference (USENIX ATC 15)"
    year: "2015"
    isbn: "978-1-931971-225"
    address: "Santa Clara, CA"
    pages: "563--575"
    link: "/papers/martins-atc15-camera.pdf"
    publisher: "USENIX Association"
    abstract: "Background activities on mobile devices can cause significant battery drain with little visibility or recourse to the user. They can range from useful but sometimes overly aggressive tasks, such as polling for messages or updates from sensors and online services, to outright bugs that cause resources to be held unnecessarily. In this paper we instrument the Android OS to characterize background activities that prevent the device from sleeping. We present TAMER, an OS mechanism that interposes on events and signals that cause task wakeups, and allows for their detailed monitoring, filtering, and rate-limiting. We demonstrate how TAMER can help reduce battery drain in scenarios involving popular Android apps with background tasks. We also show how TAMER can mitigate the effects of well-known energy bugs while maintaining most of the apps' functionality. Finally, we elaborate on how developers and users can devise their own application-control policies for TAMER to maximize battery lifetime."

  - &peddenti_cosn_14
    anchor: peddenti_cosn_14
    title: "On the Internet, Nobody Knows You're a Dog: A Twitter Case Study of Anonymity in Social Networks"
    authors:
      - name: "Peddinti, Sai Teja and Ross, Keith W. and Cappos, Justin"
    booktitle: "Proceedings of the Second ACM Conference on Online Social Networks"
    series: "COSN '14"
    year: "2014"
    isbn: "978-1-4503-3198-2"
    location: "Dublin, Ireland"
    pages: "83--94"
    numpages: "12"
    link: "/papers/peddenti_cosn_14.pdf"
    acmid: "2660467"
    publisher: "ACM"
    address: "New York, NY, USA"
    keywords: "anonymity, behavioral analysis, online social networks, quantify, twitter"
    abstract: "Twitter does not impose a Real-Name policy for usernames, giving users the freedom to choose how they want to be identified. This results in some users being Identifiable (disclosing their full name) and some being Anonymous (disclosing neither their first nor last name).

In this work we perform a large-scale analysis of Twitter to study the prevalence and behavior of Anonymous and Identifiable users. We employ Amazon Mechanical Turk (AMT) to classify Twitter users as Highly Identifiable, Identifiable, Partially Anonymous, and Anonymous. We find that a significant fraction of accounts are Anonymous or Partially Anonymous, demonstrating the importance of Anonymity in Twitter. We then select several broad topic categories that are widely considered sensitive--including pornography, escort services, sexual orientation, religious and racial hatred, online drugs, and guns--and find that there is a correlation between content sensitivity and a user's choice to be anonymous. Finally, we find that Anonymous users are generally less inhibited to be active participants, as they tweet more, lurk less, follow more accounts, and are more willing to expose their activity to the general public. To our knowledge, this is the first paper to conduct a large-scale data-driven analysis of user anonymity in online social networks."

  - &zhuang_netcheck_nsdi_14
    anchor: zhuang_netcheck_nsdi_14
    title: "NetCheck: Network Diagnoses from Blackbox Traces"
    authors:
      - name: "Yanyan Zhuang and Eleni Gessiou and Steven Portzer and Fraida Fund and Monzur Muhammad and Ivan Beschastnikh and Justin Cappos"
    project: *netcheck
    booktitle: "11th USENIX Symposium on Networked Systems Design and Implementation (NSDI 14)"
    year: "2014"
    isbn: "978-1-931971-09-6"
    address: "Seattle, WA"
    pages: "115--128"
    link: "/papers/zhuang_netcheck_nsdi_14.pdf"
    publisher: "USENIX Association"
    abstract: "This paper introduces NetCheck, a tool designed to diagnose network problems in large and complex applications. NetCheck relies on blackbox tracing mechanisms, such as strace, to automatically collect sequences of network system call invocations generated by the application hosts. NetCheck performs its diagnosis by (1) totally ordering the distributed set of input traces, and by (2) utilizing a network model to identify points in the totally ordered execution where the traces deviated from expected network semantics.

Our evaluation demonstrates that NetCheck is able to diagnose failures in popular and complex applications without relying on any application- or network-specific information. For instance, NetCheck correctly identified the existence of NAT devices, simultaneous network disconnection/ reconnection, and platform portability issues. In a more targeted evaluation, NetCheck correctly detects over 95% of the network problems we found from bug trackers of projects like Python, Apache, and Ruby. When applied to traces of faults reproduced in a live network, NetCheck identified the primary cause of the fault in 90% of the cases. Additionally, NetCheck is efficient and can process a GB-long trace in about 2 minutes."

  - &polypasswordhasher_TR
    anchor: polypasswordhasher_TR
    title: "PolyPasswordHasher: Protecting Passwords In The Event Of A Password File Disclosure"
    authors:
      - name: "Cappos, Justin and Torres, Santiago"
    project: *pph
    year: "2014"
    institution: "Technical report"
    link: "https://github.com/PolyPasswordHasher/PolyPasswordHasher/blob/master/academic-writeup/paper.pdf"
    abstract: "Over the years, we have witnessed various password-hash database breaches that have affected small and large companies, with a diversity of users and budgets. The industry standard, salted hashing (and even key stretching), has proven to be insufficient protection against attackers who now have access to clusters of GPU-powered password crackers. Although there are various proposals for better securing password storage, most do not offer the same adoption model (software-only, server-side) as salted hashing, which may impede adoption. In this paper, we present PolyPasswordHasher, a software-only, server-side password storage mechanism that requires minimal additional work for the server, but exponentially increases the attacker's effort. PolyPasswordHasher uses a threshold cryptosystem to interrelate stored password data so that passwords cannot be individually cracked. Our analysis shows that PolyPasswordHasher is memory and storage efficient, hard to crack, and easy to implement. In many realistic scenarios, cracking a PolyPasswordHasher-enabled database would be infeasible even for an adversary with millions of computers."

  - &cappos_refmonitor_sigcse_14
    anchor: cappos_refmonitor_sigcse_14
    title: "Teaching the Security Mindset with Reference Monitors"
    authors:
      - name: "Cappos, Justin and Weiss, Richard"
    project: *seattle
    booktitle: "Proceedings of the 45th ACM Technical Symposium on Computer Science Education"
    series: "SIGCSE '14"
    year: "2014"
    isbn: "978-1-4503-2605-6"
    location: "Atlanta, Georgia, USA"
    pages: "523--528"
    numpages: "6"
    url: "http://doi.acm.org/10.1145/2538862.2538939"
    doi: "10.1145/2538862.2538939"
    acmid: "2538939"
    publisher: "ACM"
    address: "New York, NY, USA"
    link: "/papers/cappos_refmonitor_sigcse_14.pdf"
    keywords: "experience report, laboratory experience, privacy, security"
    abstract: "One of the central skills in computer security is reasoning about how programs fail. As a result, computer security necessarily involves thinking about the corner cases that arise when software executes. An unfortunate side effect of this is that computer security assignments typically necessitate deep understanding of a topic, such as how the stack is laid out in memory or how web applications interact with databases. This work presents a series of assignments that require very little background knowledge from students, yet provide them with the ability to reason about failures in programs. In this set of assignments, students implement two very simple programs in a high-level language (Python). Students first implement a reference monitor that tries to uphold a security property within a sandbox. For the second portion, the students are provided each others' reference monitors and then write attack code to try to bypass the reference monitors. By leveraging a Python-based sandbox, student code is isolated cleanly, which simplifies development and grading. These assignments have been used in about a dozen classes in a range of environments, including a research university, online classes, and a four year liberal arts school. Student and instructor feedback has been overwhelmingly positive. Furthermore, survey results demonstrate that after a 2-3 week module, 76% of the students who did not understand reference monitors and access control learned these key security concepts."

  - &oliveira_puzzles_acsac_2014
    anchor: oliveira_puzzles_acsac_2014
    title: "It's the Psychology Stupid: How Heuristics Explain Software Vulnerabilities and How Priming Can Illuminate Developer's Blind Spots"
    authors:
      - name: "Oliveira, Daniela and Rosenthal, Marissa and Morin, Nicole and Yeh, Kuo-Chuan and Cappos, Justin and Zhuang, Yanyan"
    project: *blindspots
    booktitle: "Proceedings of the 30th Annual Computer Security Applications Conference"
    series: "ACSAC '14"
    year: "2014"
    isbn: "978-1-4503-3005-3"
    location: "New Orleans, Louisiana, USA"
    pages: "296--305"
    numpages: "10"
    link: "/papers/oliveira_puzzles_acsac_2014.pdf"
    acmid: "2664254"
    publisher: "ACM"
    address: "New York, NY, USA"
    abstract: "Despite the security community's emphasis on the importance of building secure software, the number of new vulnerabilities found in our systems is increasing. In addition, vulnerabilities that have been studied for years are still commonly reported in vulnerability databases. This paper investigates a new hypothesis that software vulnerabilities are blind spots in developer's heuristic-based decision-making processes. Heuristics are simple computational models to solve problems without considering all the information available. They are an adaptive response to our short working memory because they require less cognitive effort. Our hypothesis is that as software vulnerabilities represent corner cases that exercise unusual information flows, they tend to be left out from the repertoire of heuristics used by developers during their programming tasks.

To validate this hypothesis we conducted a study with 47 developers using psychological manipulation. In this study each developer worked for approximately one hour on six vulnerable programming scenarios. The sessions progressed from providing no information about the possibility of vulnerabilities, to priming developers about unexpected results, and explicitly mentioning the existence of vulnerabilities in the code. The results show that (i) security is not a priority in software development environments, (ii) security is not part of developer's mindset while coding, (iii) developers assume common cases for their code, (iv) security thinking requires cognitive effort, (v) security education helps, but developers can have difficulties correlating a particular learned vulnerability or security information with their current working task, and (vi) priming or explicitly cueing about vulnerabilities on-the-spot is a powerful mechanism to make developers aware about potential vulnerabilities."

  - &cappos_nspw_2014
    anchor: cappos_nspw_2014
    title: "Vulnerabilities As Blind Spots in Developer's Heuristic-Based Decision-Making Processes"
    authors:
      - name: "Cappos, Justin and Zhuang, Yanyan and Oliveira, Daniela and Rosenthal, Marissa and Yeh, Kuo-Chuan"
    project: *blindspots
    booktitle: "Proceedings of the 2014 New Security Paradigms Workshop"
    series: "NSPW '14"
    year: "2014"
    isbn: "978-1-4503-3062-6"
    location: "Victoria, British Columbia, Canada"
    pages: "53--62"
    numpages: "10"
    link: "/papers/cappos_nspw_2014.pdf"
    acmid: "2683472"
    publisher: "ACM"
    address: "New York, NY, USA"
    keywords: "api, automated checker, blind spots, cueing, heuristics, puzzles, vulnerabilities"
    abstract: "The security community spares no effort in emphasizing security awareness and the importance of building secure software. However, the number of new vulnerabilities found in today's systems is still increasing. Furthermore, old and well-studied vulnerability types such as buffer overflows and SQL injections, are still repeatedly reported in vulnerability databases. Historically, the common response has been to blame the developers for their lack of security education. This paper discusses a new hypothesis to explain this problem by introducing a new security paradigm where software vulnerabilities are viewed as developers' blind spots in their decision making. We argue that such a flawed mental process is heuristic-based, where humans solve problems without considering all the information available, just like taking shortcuts. This paper's thesis is that security thinking tends to be left out by developers during their programming, as vulnerabilities usually exist in corner cases with unusual information flows. Leveraging this paradigm, this paper introduces a novel methodology for capturing and understanding security-related blind spots in Application Programming Interfaces (APIs). Finally, it discusses how this methodology can be applied to the design and implementation of the next generation of automated diagnosis tools."

  - &tr-cse-2013-03
    anchor: tr-cse-2013-03
    title: "NetCheck Test Cases: Input Traces and NetCheck Output"
    authors:
      - name: "Cappos, Justin and Zhuang, Yanyan Zhuang and Beschastnikh, Ivan"
    project: *netcheck
    link: "/papers/tr-cse-2013-03.pdf"
    abstract: "Application failures due to network issues are some of the most difficult to diagnose
and debug. This is because the failure may be due to in-network state or
state maintained by a remote end-host, both of which are invisible to an application
host. For instance, data may be dropped due to MTU issues [18], NAT
devices and firewalls introduce problems due to address changes and connection
blocking [11], default IPv6 options can cause IPv4 applications to fail [3],
and default buffer size settings can cause UDP datagrams to be dropped or
truncated [37].
This report presents the results of our work NetCheck [38]. In contrast
with most prior approaches, NetCheck does not require application- or networkspecific
knowledge to perform its diagnoses, and no modification to the application
or the infrastructure is necessary. NetCheck treats an application as a
blackbox and requires just a set of system call (syscall) invocation traces from
the relevant end-hosts. These traces can be easily collected at runtime with standard
blackbox tracing tools, such as strace. To perform its diagnosis, NetCheck
derives a global ordering of the input syscalls by simulating the syscalls against
a network model. The model is also used to identify those syscalls that deviate
from expected network semantics. These deviations are then mapped to a
diagnosis by using a set of heuristics."

  - &zhuang_seattle_gree_13
    anchor: zhuang_seattle_gree_13
    title: "Experience with Seattle: A Community Platform for Research and Education"
    authors:
      - name: "Y. Zhuang and A. Rafetseder and J. Cappos"
    project: *seattle
    booktitle: "2013 Second GENI Research and Educational Experiment Workshop"
    year: "2013"
    pages: "37-44"
    keywords: "computer aided instruction;research and development;security of data;teaching;Seattle testbed;application performance;computational resource;education platform;educational standpoint;research platform;teaching tool;user security;Communities;Educational institutions;Monitoring;Security;Smart phones;Software;Virtual machining;Distributed Testbed;Educational Use;End-User Machines;Experimental Facilities"
    month: "March"
    link: "/papers/zhuang_seattle_gree_13.pdf"
    abstract: "Hands-on experience is a critical part of research and education. Today's distributed testbeds fulfill that need for many students studying networking, distributed systems, cloud computing, security, operating systems, and similar topics. In this work, we discuss one such testbed, Seattle. Seattle is an open research and educational testbed that utilizes computational resources provided by end users on their existing devices. Unlike most other platforms, resources are not dedicated to the platform which allows a greater degree of network diversity and realism at the cost of programmability. Seattle is designed to preserve user security and to minimally impact application performance. We describe the architectural design of Seattle, and summarize our experiences with Seattle over the past few years as both researchers and educators. We have found that Seattle is very easy to adopt due to cross-platform support, and is also surprisingly easy for students to use. While there are programmability limitations, it is possible to construct complex applications integrated with real devices, networks, and users with Seattle as a core component. From an educational standpoint, Seattle has been shown not only to be useful as a teaching tool, it has been successful in variety of different systems classes at a variety of different types of schools. In our experience, when low-level programmability is not the main requirement, Seattle can supersede many existing testbeds for diverse educational and research tasks"

  - &cappos_uppir_fc_13
    anchor: cappos_uppir_fc_13
    title: "Avoiding theoretical optimality to efficiently and privately retrieve security updates"
    keywords: "Performance, Practical Security, Private Information Retrieval"
    authors:
      - name: "Justin Cappos"
    project: *uppir
    year: "2013"
    isbn: "9783642398834"
    volume: "7859 LNCS"
    series: "Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)"
    pages: "386--394"
    booktitle: "Financial Cryptography and Data Security - 17th International Conference, FC 2013, Revised Selected Papers"
    link: "/papers/cappos_uppir_fc_13.pdf"
    abstract: "This work demonstrates the feasibility of building a PIR system
with performance similar to non-PIR systems in real situations. Prior
Chor PIR systems have chosen block sizes that are theoretically optimized
to minimize communication. This (ironically) reduces the throughput
of the resulting system by roughly 50x. We constructed a Chor PIR
system called upPIR that is efficient by choosing block sizes that are theoretically
suboptimal (from a communications standpoint), but fast and
efficient in practice. For example, an upPIR mirror running on a threeyear-old
desktop provides security updates from Ubuntu 10.04 (1.4 GB of
data) fast enough to saturate a T3 link. Measurements run using mirrors
distributed around the Internet demonstrate that a client can download
software updates with upPIR about as quickly as with FTP."

  - &rafetseder_sensorium_netsys_13
    anchor: rafetseder_sensorium_netsys_13
    title: "Sensorium-A Generic Sensor Framework."
    authors:
      - name: "Rafetseder, Albert and Metzger, Florian and P{\"u}hringer, Lukas and Tutschku, Kurt and Zhuang, Yanyan and Cappos, Justin"
    project: *sensibility
    journal: "Praxis der Informationsverarbeitung und Kommunikation"
    volume: "36"
    number: "1"
    pages: "46"
    year: "2013"
    link: "/papers/rafetseder_sensorium_netsys_13.pdf"
    abstract: "This contribution describes Sensorium, our framework
for accessing sensor values on computing devices and
making them available to other applications. Meanwhile, it allows
users control the exposure of privacy-related data. Our goal
is to bring the sensing capabilities of modern devices to a
broader range of reseachers and experimenters via an open
source framework. We also present a real application making
use of Sensorium's virtues: For our web service Open3GMap,
we crowd-source radio reception quality measurements in 3G
networks. We combine the data into an open geo-information
system."

  - &tr-cse-2013-04
    anchor: tr-cse-2013-04
    title: "Future Internet Bandwidth Trends: An Investigation on Current and Future Disruptive Technologies"
    authors:
      - name: "Zhuang, Yanyan and Cappos, Justin and Rappaport, Theodore S and McGeer, Rick"
    year: "2013"
    institution: "Tech. rep. tr-cse-2013-04, Polytechnic Institute of NYU"
    link: "/papers/tr-cse-2013-04.pdf"
    abstract: "New technologies sometimes result in disruptive changes
to the existing infrastructure. Without adequate foresight,
industry, academia, and government can be caught
flat-footed. In this work, we focus on the trends surrounding
home Internet bandwidth - the bandwidth required
by end user applications at home. As building and
managing last mile network infrastructure incurs substantial
cost, the foresight of such trends is necessary to
plan upgrades.
Using a bottom-up approach, we look at four potentially
disruptive technologies, including millimeter wave
wireless (mm-wave), the Internet of Things (IoT), Fog
Computing, and Software Defined Networking (SDN).
We examine use cases proposed by academia and industry,
delve into the bandwidth requirements for proposed
applications, and use this data to forecast future traffic
demands for typical home users. Our projections show
that bandwidth changes at end user devices will most
likely be driven by two of the above technologies: millimeter
wave wireless and Fog Computing. These technologies
not only change the peak bandwidth, but also
have noticeable secondary effects on bandwidth such as
increasing upload bandwidth use, improving flash crowd
tolerance, and increasing off-peak demand. While IoT
and SDN are important, innovative technologies, they
will not drastically alter the bandwidth usage patterns of
ordinary users at home. We hope that the data and recommendations
from this study can help business leaders
and policy makers get an early jump on emerging technologies
before they begin to shape the economy and society."

  - &muhammad_seattle_geni_12
    anchor: muhammad_seattle_geni_12
    title: "Towards a representive testbed: Harnessing volunteers for networks research"
    authors:
      - name: "Muhammad, Monzur and Cappos, Justin"
    project: *seattle
    booktitle: "The First GENI Research and Educational Workshop, GREE"
    volume: "12"
    year: "2012"
    link: "/papers/muhammad_seattle_geni_12.pdf"
    abstract: "A steady rise in home systems has been seen over the past
few years. As more systems are designed and deployed, an
appropriate testbed is required to test these systems. Several
systems exist, such as PlanetLab, that currently provide
a networking testbed allowing researchers and developers to
test and measure various applications. However in the long
run such testbeds will be unable to keep up and meet all the
demands of many of the large scale modern day peer-to-peer
systems. We outline the various challenges and essentials of
a networking testbed and we provide an alternate networking
testbed that is driven by resources that are voluntarily
contributed. We talk about the various advantages and disadvantages
of the Seattle system, an open source peer-topeer
computing testbed that has the potential to meet these
demands. The testbed is composed of sandboxed resources
that are donated by volunteers. Seattle has been deployed
for about three years and supports many researchers who
are interested in a networking testbed. The testbed consists
of over 4100 nodes and is constantly growing. Seattle looks
to grow and meet the demands of networking testbeds as
they are made."

  - &matthews_etal
    anchor: matthews_etal
    title: "Lind: Challenges turning virtual composition into reality"
    authors:
      - name: "Matthews, Chris and Cappos, Justin and McGeer, Rick and Neville, Stephen and Coady, Yvonne"
    booktitle: "Freeco 2011 Onward! Workshop: Towards Free Composition of Software Modules"
    year: "2011"
    link: "/papers/matthews_etal.pdf"
    abstract: "Security is a constant sore spot in application development.
Applications now need structural support for better isolation
and security on a domain specific basis to stave off
the multitude of modern security vulnerabilities. Currently,
application developers have been relying upon cumbersome
workarounds to address these issues. We propose the design
and initial implementation details for Lind, a highly flexible
composition infrastructure that can be well-integrated
with modern application development processes and extends
traditional mechanisms like virtualization and software fault
isolation in a way that can be tailored according to an application's
need. Lind does this by providing the structures and
services needed to build a virtual component model. Since
compositions of virtual components are different than current
software systems, building and using virtual component
models provides a new set of software engineering challenges
in composition and system construction. As a possible solution
to many modern security problems, it is important to
understand how virtual component models can be evaluated,
to further both the users understanding of them, and future
research in this area. This paper proposes a design and implementation
strategy for components that run in isolation.
An evaluation of the efficacy of this approach in terms of
performance, isolation, security and composition provides
insight into the possible advantages and disadvantages of a
virtual component model."

  - &collares_ET_neat_11
    anchor: collares_ET_neat_11
    title: "ET (Smart) Phone Home!"
    authors:
      - name: "Collares, Leandro and Matthews, Chris and Cappos, Justin and Coady, Yvonne and McGeer, Rick"
    project: *seattle
    booktitle: "Proceedings of the Compilation of the Co-located Workshops on DSM'11, TMC'11, AGERE! 2011, AOOPES'11, NEAT'11, & VMIL'11"
    series: "SPLASH '11 Workshops"
    year: "2011"
    isbn: "978-1-4503-1183-0"
    location: "Portland, Oregon, USA"
    pages: "283--288"
    numpages: "6"
    link: "/papers/collares_ET_neat_11.pdf"
    acmid: "2095098"
    publisher: "ACM"
    address: "New York, NY, USA"
    keywords: "distributed systems, human-computer interaction, network troubleshooting, sandbox environments, smartphones"
    abstract: "Most home users are not able to troubleshoot advanced network issues themselves. Hours on the phone with an ISP's customer representative is a common way to solve this problem. With the advent of mobile devices with both Wi-Fi and cellular radios, troubleshooters at the ISP have a new back-door into a malfunctioning residential network. However, placing full trust in an ISP is a poor choice for a home user. In this paper we present Extra Technician (ET), a system designed to provide ISPs and others with an environment to troubleshoot home networking in a remote, safe and flexible manner."

  - &wallace_JCSC_seattle_2011
    anchor: wallace_JCSC_seattle_2011
    title: "Hands-on Internet with Seattle and Computers from Across the Globe"
    authors:
      - name: "Wallace, Scott A. and Muhammad, Monzur and Mache, Jens and Cappos, Justin"
    project: *seattle
    link: "/papers/wallace_JCSC_seattle_2011.pdf"
    abstract: "The Internet Connectivity module is a short assignment covering distributed computing and networking. The Internet Connectivity module is part of the curriculum created for the Northwest Distributed Computer Science Department and is built upon the Seattle distributed computing platform. In this paper, we describe the module and illustrate how Seattle facilitates networking projects and experiments that use computers/resources from across the globe. In addition, we describe how the Internet Connectivity module was used in two courses, provide some comments on students' reactions to the project, and conclude with suggestions for faculty considering how to use this module in their future courses."

  - &cappos_seattle_sigcse_2009
    anchor: cappos_seattle_sigcse_2009
    title: "Seattle: A Platform for Educational Cloud Computing"
    authors:
      - name: "Cappos, Justin and Beschastnikh, Ivan and Krishnamurthy, Arvind and Anderson, Tom"
    project: *seattle
    booktitle: "Proceedings of the 40th ACM Technical Symposium on Computer Science Education"
    series: "SIGCSE '09"
    year: "2009"
    isbn: "978-1-60558-183-5"
    location: "Chattanooga, TN, USA"
    pages: "111--115"
    numpages: "5"
    acmid: "1508905"
    publisher: "ACM"
    address: "New York, NY, USA"
    keywords: "cloud computing, cluster computing, distributed computing, peer-to-peer computing"
    link: "/papers/cappos_seattle_sigcse_2009.pdf"
    abstract: "Cloud computing is rapidly increasing in popularity. Companies
such as RedHat, Microsoft, Amazon, Google, and
IBM are increasingly funding cloud computing infrastructure
and research, making it important for students to gain
the necessary skills to work with cloud-based resources. This
paper presents a free, educational research platform called
Seattle that is community-driven, a common denominator
for diverse platform types, and is broadly deployed.
Seattle is community-driven - universities donate available
compute resources on multi-user machines to the platform.
These donations can come from systems with a wide
variety of systems operating and architectures, removing the
need for a dedicated infrastructure.
Seattle is also surprisingly flexible and supports a variety
of pedagogical uses because as a platform it represents a
common denominator for cloud computing, grid computing,
peer-to-peer networking, distributed systems, and networking.
Seattle programs are portable. Students' code can run
across different operating systems and architectures without
change, while the Seattle programming language is expressive
enough for experimentation at a fine-grained level. Our
current deployment of Seattle consists of about one thousand
computers that are distributed around the world. We
invite the computer science education community to employ
Seattle in their courses."

publication_cards:
  - type: Conference Papers
    anchor: conference
    publications:
      - *kuppusamy_escar_16
      - *torres_toto_usenixsec-2016
      - *kuppusamy_nsdi_16
      - *Peddinti_ICWSM_2016
      - *rasley_checkapi_issre2015
      - *weiss_trustcom2015
      - *li-usenix-fence-2015
      - *martins-atc15-camera
      - *reininger_sensevis_sas15
      - *hooshangi_sigcse15
      - *oliveira_puzzles_acsac_2014
      - *peddenti_cosn_14
      - *zhuang_netcheck_nsdi_14
      - *cappos_blursense_sas_14
      - *cappos_refmonitor_sigcse_14
      - *cappos_uppir_fc_13
      - *cappos_seattle_sigcse_2009

  - type: Workshop Papers
    anchor: workshop
    publications:
      - *cappos_nspw_2014
      - *zhuang_seattle_gree_13
      - *rafetseder_sensorium_netsys_13
      - *muhammad_seattle_geni_12
      - *matthews_etal
      - *collares_ET_neat_11

  - type: Journal Articles, Magazines, Tech Reports, etc.
    anchor: journals
    publications:
      - *polypasswordhasher_TR
      - *tr-cse-2013-04
      - *tr-cse-2013-03
      - *wallace_JCSC_seattle_2011
